pipeline {
    agent none
    stages {
        stage('Build And Test on Development environment') {
            when {
                branch 'development'  
            }
            agent { label 'development' }
            environment {
                ENV_TYPE = 'DEV'
                HOST = 'localhost'
                PORT = '8000'
                REDIS_HOST = 'redis'
                REDIS_PORT = '6379'
                REDIS_DB = '0'
                RUN_TYPE = ''
            }
            stages{
                stage('clean development envirnment') {
                    steps {
                        catchError(buildResult: 'SUCCESS', stageResult: 'SUCCESS') {
                            sh 'docker stop $(docker ps -q)'
                            sh 'docker rm $(docker ps -a -q)'
                        }
                    }
                }
                stage('deploy on development environment'){
                    steps {
                        sh 'docker-compose up -d --build'
                    }
                }
                stage('testing'){
                    steps{
                        sh 'docker exec  App python tests/test.py'
                    }
                }
            }
        }
        stage('Deploy on Production environment') {
            when {
                branch 'master'  
            }
            agent { label 'production' }
            
            stages{
                stage('Testing'){
                    stages{
                        stage('deploy on development environment'){
                            environment {
                                ENV_TYPE = 'PROD'
                                HOST = 'localhost'
                                PORT = '8001'
                                REDIS_HOST = 'redisTEST'
                                REDIS_PORT = '6380'
                                REDIS_DB = '0'
                                RUN_TYPE = 'TEST'
                            }
                            steps {
                                sh 'docker-compose up -d --build'
                            }
                        }
                        stage('testing'){
                            steps{
                                sh 'docker exec  AppTEST python tests/test.py'
                            }
                        }
                    }
                }
                stage('clean production envirnment') {
                    steps {
                        catchError(buildResult: 'SUCCESS', stageResult: 'SUCCESS') {
                            sh 'docker stop $(docker ps -q)'
                            sh 'docker rm $(docker ps -a -q)'
                        }
                    }
                }
                stage('deploy on production envirnment'){
                    environment {
                        ENV_TYPE = 'PROD'
                        HOST = 'localhost'
                        PORT = '8000'
                        REDIS_HOST = 'redis'
                        REDIS_PORT = '6379'
                        REDIS_DB = '0'
                        RUN_TYPE = ''
                    }
                    steps {
                        sh 'docker-compose up -d --build'
                    }
                }
            }
        }
        stage('send slack message'){
            agent { label 'development' }
            stages{
                stage('send done and tested message'){
                    steps {
                        slackSend channel: '#first-challenge', 
                                color: 'good',
                                message: "${env.BRANCH_NAME} Done and Tested"
                    }
                }
            }
        }
    }
}