pipeline {
    agent none
    stages {
        stage('Build And Test on Development environment') {
            agent { label 'development' }
            environment {
                ENV_TYPE = 'DEV'
            }
            stages{
                stage('build App image'){
                    steps {
                        sh 'docker build -t torando:latest .'
                    }
                }
                stage('clean development envirnment') {
                    steps {
                        catchError(buildResult: 'SUCCESS', stageResult: 'SUCCESS') {
                            sh 'docker stop $(docker ps -q)'
                            sh 'docker rm $(docker ps -a -q)'
                        }
                    }
                }
                stage('deploy on development environment'){
                    steps {
                        sh 'docker-compose up -d'
                    }
                }
            }
        }
        stage('Deploy on Production environment') {
            agent { label 'production' }
            environment {
                ENV_TYPE = 'PROD'
            }
            stages{
                stage('clean production envirnment') {
                    steps {
                        catchError(buildResult: 'SUCCESS', stageResult: 'SUCCESS') {
                            sh 'docker stop $(docker ps -q)'
                            sh 'docker rm $(docker ps -a -q)'
                        }
                    }
                }
                stage('build App image'){
                    steps {
                        sh 'docker build -t torando:latest .'
                    }
                }
                stage('deploy on production envirnment'){
                    steps {
                        sh 'docker-compose up -d'
                    }
                }
            }
        }
    }
}